#include <bits/stdc++.h>

using namespace std;



class Player{
    string name;
    
    public:
    string getName(){
        return name;
    }
    void setName(string name){
        this->name =name;
    }
};
   

class PlayGame{
    char board[3][3];
    queue<Player> q;
    vector<int> moves;
    bool isCompleted;
    public:
    
     PlayGame(){
         for(int i=0;i<3;i++)
         {
             for(int j=0;j<3;j++)
             board[i][j]='.';
         }
    }
    
    void setPlayers(vector<Player> players){
        for(auto it:players)
        q.push(it);
    }
    
    bool rowCrossed(char board[][3])
    {
        for(int i=0;i<3;i++)
        {
            if(board[i][0]==board[i][1] && board[i][1]==board[i][2] && board[i][0]!='.')
            return true;
            
        }
        return false;
    }
    
      bool colCrossed(char board[][3])
    {
        for(int i=0;i<3;i++)
        {
            if(board[0][i]==board[1][i] && board[1][i]==board[2][i] && board[0][i]!='.')
            return true;
            
        }
        return false;
    }
    
      bool diagCrossed(char board[][3])
    {
        if(board[0][0] == board[1][1] && board[1][1]==board[2][2]  && board[0][0] !='.')
        return true;
        if(board[0][2] == board[1][1] && board[1][1]==board[2][0]  && board[0][2] !='.')
        return true;
         return false;
       
    }
    
    bool hasGameCompleted(){
        if(rowCrossed(board) || colCrossed(board) || diagCrossed(board))
        {
            this->isCompleted=true;
            return true;
        }
        else
        return false;
    }
    
    void showboard(){
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        cout<<board[i][j]<<" ";
        cout<<"\n";
    }
}
    
    void gameStart(){
        for(int i=0;i<9;i++)
        moves.push_back(i);
        random_shuffle(moves.begin(),moves.end());
        int moveindex=0;
        while(!isCompleted && moveindex!=9)
        {
            int x,y;

            x= moves[moveindex]/3;
            y=moves[moveindex]%3;
            Player cur_player = q.front();
            q.pop();
            if(cur_player.getName()=="COMPUTER")
            {
                board[x][y]='0';
                showboard();
                moveindex++;
                q.push(cur_player);
            } 
            else
            {
                board[x][y]='X';
                showboard();
                moveindex++;
                q.push(cur_player);
            }
            isCompleted = hasGameCompleted(); 
            
        }
        if(isCompleted && moveindex!=9)
        {
            q.pop();
            cout<<"winner is "<<q.front().getName()<<"\n";
        }
        else
        {
            cout<<"It's draw";
        }
        
    }
};



int main() {
   
  vector<Player> players;
  int n;
  cin>>n;
  for(int i=0;i<n;i++)
  {
      string x;
      cin>>x;
      Player p;
      p.setName(x);
      players.push_back(p);
  }
  
  PlayGame p1;
  p1.setPlayers(players);
   p1.gameStart();
   
}
